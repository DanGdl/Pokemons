plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
android {
    compileSdkVersion project.compile
    buildToolsVersion project.tools

    defaultConfig {
        minSdkVersion project.min
        targetSdkVersion project.target

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    namespace 'com.mdgd.pokemon.models_impl'
}

dependencies {
    implementation project(':models')
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "androidx.appcompat:appcompat:$compat"

    // room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room_compiler"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_gson"

    // okHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_log"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"

    implementation "androidx.core:core-ktx:$ktx"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    testImplementation "junit:junit:$junit"
    testImplementation "org.mockito:mockito-core:4.3.1"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    testImplementation "com.google.code.gson:gson:$gson"
}

repositories {
    mavenCentral()
}
